{"version":3,"file":"static/webpack/static/development/pages/index.js.13065c499cd8111a6f66.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport keydown from \"react-keydown\";\n\nimport Intro from \"components/Intro\";\nimport FightStart from \"components/FightStart\";\nimport Game from \"components/Game\";\nimport Question from \"components/Question\";\n\nimport questions from \"utils/questionsList\";\nimport { updateState } from \"reduxStore/actions\";\n\nimport { StoreInterface, OpponentInterface } from \"utils/types\";\nimport { Dispatch } from \"redux\";\n\ninterface Props {\n  state: string;\n  player: OpponentInterface;\n  enemy: OpponentInterface;\n  keydown: { event: KeyboardEvent };\n  dispatch: Dispatch;\n}\n\ninterface State {\n  questionID: number;\n}\n\n@keydown\nclass Index extends Component<Props, State> {\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.state === \"attack\") {\n      setTimeout(() => {\n        this.setState(\n          prevState => ({\n            ...prevState,\n            questionID: prevState.questionID + 1\n          }),\n          () => {\n            if (nextProps.enemy)\n              this.props.dispatch(updateState(\"showQuestion\"));\n          }\n        );\n      }, 1500);\n    }\n  }\n\n  state = {\n    questionID: 0\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Intro keydown={this.props.keydown} />\n        <FightStart toShow={this.props.state === \"startFight\"} />\n        <Question\n          keydown={this.props.keydown}\n          question={questions[this.state.questionID]}\n          toShow={this.props.state === \"showQuestion\"}\n        />\n        <Game />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreInterface) {\n  const { state: gameState, enemy, player } = state;\n  return { state: gameState, enemy, player };\n}\n\nexport default connect(mapStateToProps)(Index);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAiBA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AADA;AACA;;;;;;AAlBA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AAAA;AAKA;AAEA;AAEA;AACA;AACA;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAnCA;AACA;AAqCA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}