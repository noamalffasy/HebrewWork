{"version":3,"file":"static/webpack/static/development/pages/index.js.90663b86d83e2d571a2a.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport keydown from \"react-keydown\";\n\nimport Intro from \"components/Intro\";\nimport FightStart from \"components/FightStart\";\nimport Game from \"components/Game\";\nimport Question from \"components/Question\";\n\nimport questions from \"utils/questionsList\";\nimport { updateState } from \"reduxStore/actions\";\n\nimport { StoreInterface } from \"utils/types\";\nimport { Dispatch } from \"redux\";\n\ninterface Props {\n  state: string;\n  dispatch: Dispatch;\n}\n\ninterface State {\n  questionID: number;\n}\n\n@keydown\nclass Index extends Component<Props, State> {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.state === \"attack\" || nextProps.state === \"takeHit\") {\n      setTimeout(() => {\n        this.state.questionID++;\n        this.props.dispatch(updateState(\"showQuestion\"));\n      }, 1500);\n    }\n  }\n\n  state = {\n    questionID: 0\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Intro {...this.props} />\n        <FightStart\n          {...this.props}\n          toShow={this.props.state === \"startFight\"}\n        />\n        <Question\n          {...this.props}\n          question={questions[this.state.questionID]}\n          toShow={this.props.state === \"showQuestion\"}\n        />\n        <Game />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreInterface) {\n  return { state: state.state };\n}\n\nexport default connect(mapStateToProps)(Index);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAcA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;;;;;;AAVA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA9BA;AACA;AAgCA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}