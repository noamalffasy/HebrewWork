{"version":3,"file":"static/webpack/static/development/pages/index.js.cab8c4289bf2776e7738.hot-update.js","sources":["webpack:///./components/FightStart.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport { updateState } from \"reduxStore/actions\";\n\nimport { Dispatch } from \"redux\";\n\ninterface Props {\n  toShow: boolean;\n  dispatch?: Dispatch;\n}\n\ninterface State {\n  toShow: boolean;\n  showReady: boolean;\n  showGo: boolean;\n}\n\nclass FightStart extends Component<Props, State> {\n  state = {\n    toShow: this.props.toShow,\n    showReady: false,\n    showGo: false\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.toShow !== this.state.toShow) {\n      this.setState(prevState => ({\n        ...prevState,\n        toShow: nextProps.toShow\n      }));\n\n      if (nextProps.toShow) {\n        setTimeout(() => {\n          this.showAnimation();\n        }, 1500);\n      }\n    }\n  }\n\n  showAnimation = () => {\n    this.setState(\n      prevState => ({\n        ...prevState,\n        showReady: true\n      }),\n      () => {\n        setTimeout(() => {\n          this.setState(\n            prevState => ({\n              ...prevState,\n              showReady: false\n            }),\n            () => {\n              setTimeout(() => {\n                this.setState(\n                  prevState => ({\n                    ...prevState,\n                    showGo: true\n                  }),\n                  () => {\n                    setTimeout(() => {\n                      this.setState(\n                        prevState => ({\n                          ...prevState,\n                          showGo: false\n                        }),\n                        () => {\n                          this.props.dispatch(updateState(\"showQuestion\"));\n                          this.setState(prevState => ({\n                            ...prevState,\n                            toShow: false\n                          }));\n                        }\n                      );\n                    }, 1000);\n                  }\n                );\n              }, 250);\n            }\n          );\n        }, 500);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className={`FightStart ${this.state.toShow ? \"show\" : \"\"}`}>\n        <h1 className={`ready ${this.state.showReady ? \"show\" : \"\"}`}>\n          מוכנים?\n        </h1>\n        <h1 className={`go ${this.state.showGo ? \"show\" : \"\"}`}>הלחמו!</h1>\n        <style jsx>{`\n          .FightStart {\n            display: none;\n            position: absolute;\n            direction: rtl;\n            margin: auto;\n            height: 15rem;\n            width: 70%;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            z-index: 5;\n          }\n\n          .FightStart.show {\n            display: block;\n          }\n\n          .FightStart h1 {\n            position: absolute;\n            text-align: center;\n            font-size: 10rem;\n            color: #c00;\n            top: 0;\n            right: 0;\n            left: 0;\n            bottom: 0;\n            transform: scale(0);\n            transition: all 0.15s;\n          }\n\n          .FightStart h1.show {\n            transform: scale(1);\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n\nexport default connect()(FightStart);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAcA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAoBA;AACA;AACA;AAEA;AAFA;AAAA;AAKA;AACA;AACA;AAEA;AAFA;AAAA;AAKA;AACA;AACA;AAEA;AAFA;AAAA;AAKA;AACA;AACA;AAEA;AAFA;AAAA;AAKA;AACA;AAAA;AAAA;AAEA;AAFA;AAAA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;;;;AA5DA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAFA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAgDA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AA2CA;;;;AAjHA;AACA;AAmHA;;;;A","sourceRoot":""}