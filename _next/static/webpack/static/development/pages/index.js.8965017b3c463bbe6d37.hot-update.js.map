{"version":3,"file":"static/webpack/static/development/pages/index.js.8965017b3c463bbe6d37.hot-update.js","sources":["webpack:///./components/Input.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\n\ninterface Props {\n  label: string;\n  type: string;\n  autofocus: boolean;\n}\n\nclass Input extends Component<Props> {\n  isEmpty = () => {\n    if (\n      (this.input as HTMLInputElement).value === \"\" ||\n      (this.input as HTMLInputElement).value === undefined\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  selectInput = e => {\n    e.persist();\n\n    this.setState(prevState => ({\n      ...prevState,\n      focus: true,\n      active: true\n    }));\n  };\n\n  deselectInput = e => {\n    e.persist();\n\n    if (!this.isEmpty()) {\n      this.setState(prevState => ({\n        ...prevState,\n        focus: true,\n        active: false\n      }));\n    } else {\n      this.setState(prevState => ({\n        ...prevState,\n        focus: false,\n        active: false\n      }));\n    }\n  };\n\n  input: HTMLInputElement = null;\n  state = { focus: false, active: false, class: \"\" };\n\n  render() {\n    return (\n      <div\n        className={\n          this.state.focus\n            ? \"Input focus\" + this.state.class\n            : \"Input\" + this.state.class\n        }\n      >\n        <label\n          className={this.state.active ? \"focus\" : \"\"}\n          htmlFor={this.props.type}\n          onClick={e => {\n            e.preventDefault();\n\n            const input = this.input;\n            (input as HTMLInputElement).focus();\n          }}\n          onFocus={this.selectInput}\n          onBlur={this.deselectInput}\n        >\n          {this.props.label}\n        </label>\n        <span\n          className={this.state.active ? \"focus\" : \"\"}\n          onFocus={this.selectInput}\n          onBlur={this.deselectInput}\n        >\n          <input\n            id={this.props.type}\n            name={this.props.type}\n            type={this.props.type}\n            autoFocus={this.props.autofocus}\n            onFocus={this.selectInput}\n            required\n            ref={input => {\n              this.input = input;\n            }}\n          />\n        </span>\n        <style jsx>{`\n          .Input {\n            position: relative;\n            width: 100%;\n            margin-bottom: 2rem;\n            cursor: text;\n          }\n\n          .Input label {\n            display: block;\n            position: absolute;\n            color: rgba(0, 0, 0, 0.4);\n            white-space: nowrap;\n            right: 0;\n            user-select: none;\n            cursor: inherit;\n            transition: all 0.3s;\n            transform-origin: right top;\n            z-index: 5;\n          }\n\n          .Input.focus label {\n            transform: translateY(-75%) scale(0.75);\n          }\n\n          .Input label.focus {\n            color: #3e618f;\n          }\n\n          .Input span {\n            border-bottom: 1px solid rgba(0, 0, 0, 0.4);\n            padding-bottom: 2px;\n          }\n\n          .Input span::after {\n            content: \"\";\n            display: block;\n            margin: -0.1rem 0 0;\n            border-bottom: 2px solid #3e618f;\n            width: 100%;\n            transform: scaleX(0);\n            transition: all 0.3s;\n          }\n\n          .Input span.focus::after {\n            transform: scaleX(1);\n          }\n\n          .Input span input {\n            border: 0;\n            position: relative;\n            width: 100%;\n            text-align: right;\n            outline: 0;\n            background: none;\n            box-shadow: none;\n          }\n\n          .Input span input:-webkit-autofill {\n            background: none !important;\n            color: #131313 !important;\n            -webkit-text-fill-color: #131313;\n            box-shadow: 0 0 0px 1000px white inset;\n          }\n\n          .Input span input:-moz-autofill {\n            background: none !important;\n            color: #131313 !important;\n            -webkit-text-fill-color: #131313;\n            box-shadow: 0 0 0px 1000px white inset;\n          }\n\n          .Input span input:-o-autofill {\n            background: none !important;\n            color: #131313 !important;\n            -webkit-text-fill-color: #131313;\n            box-shadow: 0 0 0px 1000px white inset;\n          }\n\n          .Input span input:-khtml-autofill {\n            background: none !important;\n            color: #131313 !important;\n            -webkit-text-fill-color: #131313;\n            box-shadow: 0 0 0px 1000px white inset;\n          }\n\n          .Input span input,\n          .Input span input::placeholder {\n            color: #131313;\n          }\n\n          @media screen and (-webkit-min-device-pixel-ratio: 0) {\n            .Input span input {\n              padding: 0;\n            }\n          }\n          @media (min-width: 768px),\n            @media (min-width: 768px) and (-webkit-min-device-pixel-ratio: 1) {\n            .Input.half:last-of-type {\n              margin-right: 0;\n              width: 50%;\n            }\n            .Input.half {\n              width: calc(50% - 1rem);\n              float: left;\n              margin-right: 1rem;\n            }\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAAA;AAKA;AACA;AAAA;AAEA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AAAA;AAAA;AAAA;AAqJA;;;;AAlMA;AACA;AAoMA;;;;A","sourceRoot":""}