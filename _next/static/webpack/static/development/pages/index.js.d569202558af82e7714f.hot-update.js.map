{"version":3,"file":"static/webpack/static/development/pages/index.js.d569202558af82e7714f.hot-update.js","sources":["webpack:///./components/Question.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\n\nimport { keydownScoped, Keys } from \"react-keydown\";\n\nimport CorrectModal from \"components/CorrectModal\";\nimport Input from \"components/Input\";\n\nimport { QuestionInterface } from \"utils/types\";\n\ninterface Props {\n  question: QuestionInterface;\n  toShow: boolean;\n}\n\ninterface State {\n  isOpen: boolean;\n  isCorrect: boolean;\n  showCorrectModal: boolean;\n}\n\nclass Question extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.dismissModal = this.dismissModal.bind(this);\n  }\n\n  answerInput: Input;\n\n  state = {\n    isOpen: this.props.toShow,\n    isCorrect: null,\n    showCorrectModal: false\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.toShow !== this.state.isOpen) {\n      this.setState(prevState => ({\n        ...prevState,\n        isOpen: nextProps.toShow\n      }));\n    }\n  }\n\n  @keydownScoped(Keys.ENTER)\n  checkAnswer(e) {\n    if (e.key === \"Enter\") {\n      const { correctAnswer } = this.props.question;\n      const userAnswer = this.answerInput.input.value;\n\n      this.setState(prevState => ({\n        ...prevState,\n        isCorrect: userAnswer === correctAnswer,\n        showCorrectModal: true\n      }));\n\n      this.dismissModal();\n    }\n  }\n\n  dismissModal() {\n    this.setState(prevState => ({\n      ...prevState,\n      isOpen: false\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <CorrectModal\n          {...this.props}\n          isOpen={this.state.showCorrectModal}\n          isCorrect={this.state.isCorrect}\n          question={this.props.question}\n        />\n        <div\n          className={`questions-outer ${!this.state.isOpen ? \"hide\" : \"\"}`}\n          onKeyDown={this.checkAnswer}\n        >\n          <div className=\"questions-inner\">\n            <h1>שאלה מספר {this.props.question.id}</h1>\n            <p>{this.props.question.question}</p>\n            <span>{this.props.question.sentence}</span>\n            <div className=\"answer\">\n              <Input\n                type=\"text\"\n                label={this.props.question.answerLabel}\n                autofocus\n                ref={input => (this.answerInput = input)}\n              />\n            </div>\n            <p className=\"call-to-action\">\n              לחץ על מקש האנטר בכדי לבדוק את התשובה\n            </p>\n          </div>\n          <style jsx>{`\n            .questions-outer {\n              position: absolute;\n              min-height: 100%;\n              min-width: 100%;\n              background: rgba(0, 0, 0, 0.4);\n              z-index: 2;\n            }\n\n            .questions-outer.hide {\n              display: none;\n            }\n\n            .questions-inner {\n              direction: rtl;\n              text-align: center;\n              background: #fff;\n              width: 90%;\n              height: 70%;\n              padding: 2rem 4rem;\n              margin: 10rem auto;\n              border-radius: 2px;\n              box-shadow: 0 0 6px 3px rgba(0, 0, 0, 0.15);\n            }\n\n            .questions-inner h1 {\n              font-size: 2.5rem;\n            }\n\n            .questions-inner p {\n              font-size: 3rem;\n              margin: 0;\n            }\n\n            .questions-inner span {\n              font-size: 4rem;\n              font-weight: bold;\n            }\n\n            .questions-inner .answer {\n              font-size: 2rem;\n              width: 50%;\n              margin: 1.5rem auto;\n            }\n\n            .questions-inner p.call-to-action {\n              font-size: 1.5rem;\n              color: #9c9c9c;\n              margin: 1rem 0 0;\n            }\n          `}</style>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Question;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAeA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAUA;AACA;AACA;AAHA;AACA;AAPA;AACA;AAJA;AAKA;AACA;;;AASA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AACA;;;AAGA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AAHA;AAAA;AAMA;AACA;AACA;;;AAEA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;;;AAEA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAAA;AAAA;AAAA;AA0EA;;;;AAnIA;AAsIA;;;;A","sourceRoot":""}