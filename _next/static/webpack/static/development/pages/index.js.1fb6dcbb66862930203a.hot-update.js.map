{"version":3,"file":"static/webpack/static/development/pages/index.js.1fb6dcbb66862930203a.hot-update.js","sources":["webpack:///./components/CorrectModal.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Component } from \"react\";\n\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  updatePlayerHP,\n  updateEnemyHP,\n  nextEnemy,\n  updateState\n} from \"reduxStore/actions\";\n\nimport { QuestionInterface, OpponentInterface } from \"utils/types\";\n\ninterface Props {\n  isOpen: boolean;\n  isCorrect: boolean;\n  question: QuestionInterface;\n  enemy: OpponentInterface;\n  state: string;\n  keydown: { event: KeyboardEvent };\n  dispatch: Dispatch;\n}\n\ninterface State {\n  isOpen: boolean;\n}\n\nclass CorrectModal extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.dismissModal = this.dismissModal.bind(this);\n  }\n\n  correctModalDiv: HTMLDivElement;\n\n  state = {\n    isOpen: this.props.isOpen\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.state === \"showQuestion\" &&\n      nextProps.isOpen !== this.state.isOpen\n    ) {\n      this.setState(prevState => ({\n        ...prevState,\n        isOpen: nextProps.isOpen\n      }));\n\n      if (nextProps.isOpen) {\n        this.correctModalDiv.focus();\n      }\n    } else if (nextProps.keydown.event !== this.props.keydown.event) {\n      this.dismissModal();\n    }\n  }\n\n  dismissModal() {\n    const { isCorrect, enemy, dispatch } = this.props;\n    if (this.state.isOpen) {\n      this.setState(\n        prevState => ({\n          ...prevState,\n          isOpen: false\n        }),\n        () => {\n          if (isCorrect) {\n            const newHP = -Math.floor(enemy.maxHP / (enemy.isBoss ? 3 : 2));\n\n            dispatch(updateEnemyHP(newHP));\n\n            if (enemy.hp + newHP === 0) {\n              dispatch(nextEnemy());\n            }\n\n            dispatch(updateState(\"attack\"));\n          } else {\n            dispatch(updatePlayerHP(-10));\n          }\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={`correct-modal-outer ${!this.state.isOpen ? \"hide\" : \"\"}`}\n        onKeyDown={this.dismissModal}\n        ref={div => (this.correctModalDiv = div)}\n      >\n        <div className=\"correct-modal-inner\">\n          <h1>{this.props.isCorrect ? \"צדקת!\" : \"טעית!\"}</h1>\n          <p>\n            במשפט <span>{this.props.question.sentence}</span>\n          </p>\n          <p className=\"big\">\n            ה{this.props.question.answerLabel} הוא{\" \"}\n            <span>{this.props.question.correctAnswer}</span>\n          </p>\n          <p className=\"call-to-action\">לחץ על כל מקש בכדי להמשיך</p>\n        </div>\n        <style jsx>{`\n          .correct-modal-outer {\n            position: absolute;\n            min-height: 100%;\n            min-width: 100%;\n            background: rgba(0, 0, 0, 0.4);\n            z-index: 2;\n          }\n\n          .correct-modal-outer.hide {\n            display: none;\n          }\n\n          .correct-modal-inner {\n            direction: rtl;\n            text-align: center;\n            background: #fff;\n            width: 90%;\n            height: 70%;\n            padding: 2rem 4rem;\n            margin: 10rem auto;\n            border-radius: 2px;\n            box-shadow: 0 0 6px 3px rgba(0, 0, 0, 0.15);\n          }\n\n          .correct-modal-inner h1 {\n            font-size: 2.5rem;\n          }\n\n          .correct-modal-inner p {\n            font-size: 2.5rem;\n            margin: 0;\n          }\n\n          .correct-modal-inner p span {\n            font-size: 2.5rem;\n            font-weight: bold;\n          }\n\n          .correct-modal-inner p.big {\n            font-size: 3rem;\n          }\n\n          .correct-modal-inner p.big span {\n            font-size: 3rem;\n          }\n\n          .correct-modal-inner p.call-to-action {\n            font-size: 1.5rem;\n            color: #9c9c9c;\n            margin: 1rem 0 0;\n          }\n        `}</style>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { player, enemy, state: gameState } = state;\n  return { player, enemy, state: gameState };\n}\n\nexport default connect(mapStateToProps)(CorrectModal);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AACA;AAsBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AADA;AACA;AANA;AAHA;AAIA;AACA;;;AAOA;AACA;AAIA;AAAA;AAEA;AAFA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AAAA;AAAA;AAuEA;;;;AAnIA;AACA;AAqIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}